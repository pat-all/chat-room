{"version":3,"sources":["hooks/useFetch.js","hooks/useToast.js","context/auth.context.js","components/Login.card.js","components/Logout.card.js","pages/auth.page.js","pages/doc.page.js","components/Message.item.js","components/Messages.list.js","components/Messages.controlcard.js","pages/messages.page.js","components/Navbar.js","hooks/useAuth.js","App.js","index.js"],"names":["useFetch","useState","isFetching","setFetching","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","useToast","text","window","M","toast","html","AuthContext","createContext","token","user","login","logout","isAuth","LoginCard","form","changeFormHandler","submitHandler","isRegChecked","isRegCheckedHandler","className","id","type","name","onChange","value","email","htmlFor","username","password","confirmpassword","onClick","style","marginLeft","defaultChecked","disabled","LogoutCard","logoutHandler","messages","map","i","key","to","AuthPage","useContext","setMessage","setRegChecked","setForm","useEffect","res","console","log","event","target","DocumentationPage","href","spanStyle","marginRight","color","dataContainer","display","flexDirection","MessageItem","deleteMessageHandler","updateMessageHandler","textEdit","setTextEdit","isUpdating","setUpdating","_id","width","height","author","created","updated","MessagesList","length","m","MessagesControlCard","changeTextmHandler","sendHandler","getListHandler","getSingleHandler","listNum","setListNum","singleId","setSingleId","placeholder","MesssagesPage","resMessage","setResMessage","setMessages","setText","filter","newMessage","index","findIndex","Navbar","useAuth","setToken","setUser","jwt","useR","localStorage","setItem","removeItem","storageData","parse","getItem","App","Provider","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc395dad.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useFetch = () => {\n  const [isFetching, setFetching] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-type\": \"application/json\" }\n    ) => {\n      setFetching(true);\n      try {\n        if (body) {\n          body = JSON.stringify(body);\n        }\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.message || \"Something went wrong\");\n        }\n\n        setFetching(false);\n        return data;\n      } catch (e) {\n        setFetching(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return { request, isFetching, error, clearError };\n};\n\nexport default useFetch;\n","import { useCallback } from \"react\";\n\nconst useToast = () => {\n  return useCallback(text => {\n    if (window.M && text) {\n      window.M.toast({ html: text });\n    }\n  }, []);\n};\n\nexport default useToast;\n","import { createContext } from \"react\";\n\nconst AuthContext = createContext({\n  token: null,\n  user: null,\n  login: () => {},\n  logout: () => {},\n  isAuth: false,\n});\n\nexport default AuthContext;\n","import React from \"react\";\n\nconst LoginCard = ({\n  form,\n  changeFormHandler,\n  submitHandler,\n  isRegChecked,\n  isRegCheckedHandler,\n  isFetching,\n}) => {\n  return (\n    <div className='row'>\n      <div className='col s6 offset-s3'>\n        <div className='card blue-grey darken-1'>\n          <div className='card-content white-text'>\n            <span className='card-title'>Authorization</span>\n            <div>\n              <div className='row'>\n                <div className='input-field col s12'>\n                  <input\n                    id='email'\n                    type='email'\n                    className='validate'\n                    name='email'\n                    onChange={changeFormHandler}\n                    value={form.email}\n                  />\n                  <label htmlFor='email'>Email</label>\n                </div>\n              </div>\n              {isRegChecked && (\n                <div className='row'>\n                  <div className='input-field col s12'>\n                    <input\n                      id='username'\n                      type='text'\n                      className='validate'\n                      name='username'\n                      onChange={changeFormHandler}\n                      value={form.username}\n                    />\n                    <label htmlFor='username'>User name</label>\n                  </div>\n                </div>\n              )}\n              <div className='row'>\n                <div className='input-field col s12'>\n                  <input\n                    id='password'\n                    type='password'\n                    className='validate'\n                    name='password'\n                    onChange={changeFormHandler}\n                    value={form.password}\n                  />\n                  <label htmlFor='password'>Password</label>\n                </div>\n              </div>\n              {isRegChecked && (\n                <div className='row'>\n                  <div className='input-field col s12'>\n                    <input\n                      id='confirmpassword'\n                      type='password'\n                      className='validate'\n                      name='confirmpassword'\n                      onChange={changeFormHandler}\n                      value={form.confirmpassword}\n                    />\n                    <label htmlFor='confirmpassword'>Confirm password</label>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='card-action'>\n            <button\n              className='btn waves-effect waves-light'\n              type='submit'\n              name='registration'\n              onClick={submitHandler}\n            >\n              Submit\n            </button>\n            <label style={{ marginLeft: 20 }}>\n              <input\n                type='checkbox'\n                className='filled-in'\n                defaultChecked={isRegChecked}\n                onClick={isRegCheckedHandler}\n                disabled={isFetching}\n              />\n              <span>Registration</span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst LogoutCard = ({ logoutHandler, user }) => {\n  return (\n    <div className='row'>\n      <div className='col s6 offset-s3'>\n        <div className='card blue-grey darken-1'>\n          <div className='card-content white-text'>\n            <span className='card-title'>User</span>\n            <p>username: {user && user.username}</p>\n            <p>email: {user && user.email}</p>\n            <br />\n            <p>Your messages ids:</p>\n            {user &&\n              user.messages.map((id, i) => (\n                <div key={id}>\n                  <Link to={`/messages`}>{id}</Link>\n                </div>\n              ))}\n          </div>\n          <div className='card-action'>\n            <button\n              className='btn waves-effect waves-light'\n              onClick={logoutHandler}\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogoutCard;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport useToast from \"../hooks/useToast\";\n\nimport AuthContext from \"../context/auth.context\";\n\nimport LoginCard from \"../components/Login.card\";\nimport LogoutCard from \"../components/Logout.card\";\n\nconst AuthPage = () => {\n  const { isAuth, logout, login, user } = useContext(AuthContext);\n  const [message, setMessage] = useState(null);\n  const toast = useToast();\n  const { isFetching, request, error, clearError } = useFetch();\n  const [isRegChecked, setRegChecked] = useState(false);\n  const isRegCheckedHandler = () => {\n    setRegChecked(!isRegChecked);\n  };\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    username: \"\",\n  });\n\n  useEffect(() => {\n    toast(error);\n    clearError();\n  }, [error, toast, clearError]);\n\n  useEffect(() => {\n    toast(message);\n    setMessage(null);\n  }, [toast, message, setMessage]);\n\n  const changeFormHandler = event => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const submitHandler = async () => {\n    try {\n      const res = await request(\n        `/api/auth/${isRegChecked ? \"register\" : \"login\"}`,\n        \"POST\",\n        form\n      );\n      login(res.data.token, res.data.user);\n      setMessage(res.message);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return (\n    <>\n      {isAuth ? (\n        <LogoutCard logoutHandler={logout} user={user} />\n      ) : (\n        <LoginCard\n          form={form}\n          isFetching={isFetching}\n          changeFormHandler={changeFormHandler}\n          isRegCheckedHandler={isRegCheckedHandler}\n          submitHandler={submitHandler}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AuthPage;\n","import React from \"react\";\n\nconst DocumentationPage = () => {\n  const redColor = { color: \"#b71c1c\" };\n  return (\n    <div className='container'>\n      <h3>Documentation</h3>\n      <a href='https://github.com/pat-all/chat-room'>Project on github</a>\n      <p>This is chat room restful api demonstration web-app</p>\n      <h5>Auth API</h5>\n      <p>\n        <blockquote>POST: /api/auth/register</blockquote>\n        creates new user in databse, required parameters:\n        <ul>\n          <li>\n            <b>username</b> - name of a user\n          </li>\n          <li>\n            <b>email</b> - user email\n          </li>\n          <li>\n            <b>password</b> - user password\n          </li>\n          <li>\n            <b>confirmpassword</b> - confirm user password\n          </li>\n        </ul>\n      </p>\n      <p>\n        <blockquote>POST: /api/auth/login</blockquote>\n        authancicates user, and returns him a <i>token</i>, required parameters:\n        <ul>\n          <li>\n            <b>username</b> - name of a user\n          </li>\n          <li>\n            <b>email</b> - user email\n          </li>\n          <li>\n            <b>password</b> - user password\n          </li>\n          <li>\n            <b>confirmpassword</b> - confirm user password\n          </li>\n        </ul>\n      </p>\n\n      <h5>Messages API:</h5>\n      <p>\n        <blockquote>GET: /api/messages/list/:num</blockquote>\n        get 10 messages from database, <b>:num</b> is a number of page starting\n        from 0\n      </p>\n      <p>\n        <blockquote>GET: /api/messages/single/:id</blockquote>\n        get single message from database, <b>:id</b> is a <i>ObjectId</i> of\n        message in a database\n      </p>\n      <p>\n        <blockquote>POST: /api/messages/single</blockquote>\n        create new message in a database, required parameters:\n        <ul>\n          <li>\n            <b>author</b> - <i>user name</i>, if authenticated, or{\" \"}\n            <i>unauthenticated</i>\n          </li>\n          <li>\n            <b>email</b> - <i>user email</i>, if authenticated, or <i>null</i>{\" \"}\n            if unauthenticated\n          </li>\n          <li>\n            <b>text</b> - entire text from 1 to 99 chars (min 1 non <i>space</i>{\" \"}\n            char)\n          </li>\n          <li>\n            <b>created</b> - <i>Date</i> of message creation (\n            <i>automatically</i>)\n          </li>\n          <li>\n            <b>updated</b> - <i>Date</i> of message creation (\n            <i>automatically</i>)\n          </li>\n        </ul>\n      </p>\n\n      <p>\n        <blockquote>PUT: /api/messages/single</blockquote>\n        updates existing message, required parameters:\n        <ul>\n          <li>\n            <b>id</b> - is a <i>ObjectId</i> of message\n          </li>\n          <li>\n            <b>text</b> - entire text from 1 to 99 chars (min 1 non <i>space</i>{\" \"}\n            char)\n          </li>\n          <li>\n            <b>updated</b> - <i>Date</i> of message updating (\n            <i>automatically</i>)\n          </li>\n        </ul>\n      </p>\n      <p>\n        <blockquote>DELETE: /api/messages/single</blockquote>\n        removes existing message from database, required parameters:\n        <ul>\n          <li>\n            <b>id</b> - is a <i>ObjectId</i> of message\n          </li>\n        </ul>\n      </p>\n    </div>\n  );\n};\n\nexport default DocumentationPage;\n","import React, { useState } from \"react\";\n\nconst spanStyle = {\n  marginRight: 10,\n  color: \"#1b5e20\",\n};\n\nconst dataContainer = { display: \"flex\", flexDirection: \"row\" };\n\nconst MessageItem = ({\n  message,\n  deleteMessageHandler,\n  updateMessageHandler,\n}) => {\n  const [textEdit, setTextEdit] = useState(message.text);\n  const [isUpdating, setUpdating] = useState(false);\n\n  const changeTextEditHandler = event => {\n    setTextEdit(event.target.value);\n  };\n  const setUpdatingHandler = () => {\n    setUpdating(!isUpdating);\n  };\n\n  const confirmUpdatingHandler = () => {\n    updateMessageHandler(message._id, textEdit);\n    setUpdating(false);\n  };\n\n  const cancelUpdateHandler = () => {\n    setTextEdit(message.text);\n    setUpdating(false);\n  };\n  return (\n    <li className='collection-item' key={message._id}>\n      <div style={dataContainer}>\n        <div className='col m8 s8'>\n          {!isUpdating ? (\n            <>\n              <div>\n                <span style={spanStyle}>id:</span>\n                {message._id}\n              </div>\n              <div>\n                <span style={spanStyle}>author:</span>\n                {message.author}\n              </div>\n              <div>\n                <span style={spanStyle}>text:</span>\n                {message.text}\n              </div>\n              <div>\n                <span style={spanStyle}>created:</span>\n                {message.created}\n              </div>\n              <div>\n                <span style={spanStyle}>updated:</span>\n                {message.updated}\n              </div>\n            </>\n          ) : (\n            <div>\n              <textarea\n                value={textEdit}\n                onChange={changeTextEditHandler}\n                style={{\n                  width: \"100%\",\n                  height: 100,\n                }}\n              ></textarea>\n            </div>\n          )}\n        </div>\n        <div className='col m4 s4'>\n          <div className='row'>\n            {!isUpdating ? (\n              <button\n                style={{ marginLeft: 10 }}\n                className='btn waves-effect waves-light red accent-4'\n                onClick={() => deleteMessageHandler(message._id)}\n              >\n                Delete\n              </button>\n            ) : (\n              <button\n                style={{ marginLeft: 10 }}\n                className='btn waves-effect waves-light green darken-3'\n                onClick={confirmUpdatingHandler}\n                disabled={message.text === textEdit}\n              >\n                Confirm\n              </button>\n            )}\n          </div>\n          <div className='row'>\n            {!isUpdating ? (\n              <button\n                style={{ marginLeft: 10 }}\n                onClick={setUpdatingHandler}\n                className='btn waves-effect waves-light light-blue darken-4'\n              >\n                Update\n              </button>\n            ) : (\n              <button\n                style={{ marginLeft: 10 }}\n                onClick={cancelUpdateHandler}\n                className='btn waves-effect waves-light orange darken-3'\n              >\n                Cancel\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default MessageItem;\n","import React from \"react\";\nimport MessageItem from \"./Message.item\";\n\nconst MessagesList = ({\n  messages,\n  deleteMessageHandler,\n  updateMessageHandler,\n}) => {\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h5>\n          Messages{messages && messages.length > 0 && `: ${messages.length}`}\n        </h5>\n      </li>\n      {messages && messages.length > 0 ? (\n        messages.map(m => (\n          <MessageItem\n            message={m}\n            deleteMessageHandler={deleteMessageHandler}\n            updateMessageHandler={updateMessageHandler}\n          />\n        ))\n      ) : (\n        <li className='collection-item'>List is empty</li>\n      )}\n    </ul>\n  );\n};\n\nexport default MessagesList;\n","import React, { useState } from \"react\";\n\nconst MessagesControlCard = ({\n  changeTextmHandler,\n  text,\n  sendHandler,\n  isFetching,\n  getListHandler,\n  getSingleHandler,\n}) => {\n  const [listNum, setListNum] = useState(\"\");\n  const [singleId, setSingleId] = useState(\"\");\n\n  const changeListNumHandler = event => {\n    setListNum(event.target.value);\n  };\n\n  const changeSingleIdHandler = event => {\n    setSingleId(event.target.value);\n  };\n\n  const listNumClickHandler = () => {\n    getListHandler(listNum);\n    setListNum(\"\");\n  };\n\n  const singleIdClickHandler = () => {\n    getSingleHandler(singleId);\n    setSingleId(\"\");\n  };\n\n  return (\n    <div className='card blue-grey darken-1'>\n      <div className='card-content white-text'>\n        <span className='card-title'>Create message</span>\n        <textarea\n          placeholder='max 99 chars'\n          onChange={changeTextmHandler}\n          value={text.text}\n        ></textarea>\n      </div>\n      <div className='card-action'>\n        <button\n          className='btn waves-effect waves-light'\n          onClick={sendHandler}\n          disabled={isFetching}\n        >\n          Create\n        </button>\n      </div>\n      <div className='card-action'>\n        <div className='row'>\n          <div className='col s12'>\n            GET: /api/messages/list/:\n            <div className='input-field inline'>\n              <input\n                id='listNum'\n                type='text'\n                value={listNum}\n                onChange={changeListNumHandler}\n              />\n              <label htmlFor='listNum'>num</label>\n            </div>\n            <button\n              style={{ marginLeft: 10 }}\n              className='btn waves-effect waves-light'\n              disabled={isFetching}\n              onClick={listNumClickHandler}\n            >\n              Get\n            </button>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col s12'>\n            GET: /api/messages/single/:\n            <div className='input-field inline'>\n              <input\n                id='singleMess'\n                type='text'\n                value={singleId}\n                onChange={changeSingleIdHandler}\n              />\n              <label htmlFor='singleMess'>id</label>\n            </div>\n            <button\n              style={{ marginLeft: 10 }}\n              className='btn waves-effect waves-light'\n              onClick={singleIdClickHandler}\n              disabled={isFetching}\n            >\n              Get\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesControlCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport useToast from \"../hooks/useToast\";\n\nimport AuthContext from \"../context/auth.context\";\nimport MessagesList from \"../components/Messages.list\";\nimport MessagesControlCard from \"../components/Messages.controlcard\";\n\nconst MesssagesPage = () => {\n  const { user } = useContext(AuthContext);\n  const toast = useToast();\n  const { isFetching, request, error, clearError } = useFetch();\n  const [resMessage, setResMessage] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  const [text, setText] = useState({ text: \"\" });\n\n  useEffect(() => {\n    toast(error);\n    clearError();\n  }, [error, toast, clearError]);\n\n  useEffect(() => {\n    toast(resMessage);\n    setResMessage(null);\n  }, [toast, resMessage, setResMessage]);\n\n  const changeTextmHandler = event => {\n    setText(event.target.value);\n  };\n\n  const sendHandler = async () => {\n    try {\n      const res = await request(\"/api/messages/single\", \"POST\", {\n        text,\n        email: user ? user.email : \"\",\n      });\n      setResMessage(res.message);\n      setMessages([...messages, res.data]);\n      setText({ text: \"\" });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const getListHandler = async listNum => {\n    console.log(\"get list\");\n    try {\n      const res = await request(`/api/messages/list/${listNum}`, \"GET\");\n      setResMessage(res.message);\n      setMessages([...res.data]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const getSingleHandler = async singleId => {\n    try {\n      const res = await request(`/api/messages/single/${singleId}`, \"GET\");\n      setResMessage(res.message);\n      setMessages([res.data]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const deleteMessageHandler = async id => {\n    try {\n      const res = await request(\"/api/messages/single\", \"DELETE\", {\n        id,\n      });\n      setResMessage(res.message);\n      setMessages([...messages.filter(m => m._id !== id)]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const updateMessageHandler = async (id, text) => {\n    try {\n      const res = await request(\"/api/messages/single\", \"PUT\", { id, text });\n      const newMessage = res.data && res.data;\n      const index = messages.findIndex(message => message._id === id);\n      messages[index] = newMessage;\n      setMessages([...messages]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return (\n    <div className='row'>\n      <div className='col s6 m6'>\n        <MessagesList\n          messages={messages}\n          deleteMessageHandler={deleteMessageHandler}\n          updateMessageHandler={updateMessageHandler}\n        />\n      </div>\n      <div className='col s6 m6'>\n        <MessagesControlCard\n          changeTextmHandler={changeTextmHandler}\n          text={text}\n          sendHandler={sendHandler}\n          isFetching={isFetching}\n          getListHandler={getListHandler}\n          getSingleHandler={getSingleHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MesssagesPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className='blue-grey'>\n      <div className='nav-wrapper'>\n        <Link to='/' className='brand-logo'>\n          Chat Room\n        </Link>\n        <ul id='nav-mobile' className='right hide-on-med-and-down'>\n          <li>\n            <Link to='/authorization'>Authorization</Link>\n          </li>\n          <li>\n            <Link to={\"/messages\"}>Messages</Link>\n          </li>\n          <li>\n            <Link to='/'>Documentation</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageName = \"userData\";\n\nconst useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  const login = useCallback((jwt, useR) => {\n    setToken(jwt);\n    setUser(useR);\n\n    localStorage.setItem(\n      storageName,\n      JSON.stringify({ token: jwt, user: useR })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(storageName);\n  }, []);\n\n  useEffect(() => {\n    const storageData = JSON.parse(localStorage.getItem(storageName));\n    if (storageData && storageData.token) {\n      login(storageData.token, storageData.user);\n    }\n  }, [login]);\n\n  return { token, user, login, logout };\n};\n\nexport default useAuth;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"materialize-css\";\n\n//pages\nimport AuthPage from \"./pages/auth.page\";\nimport DocPage from \"./pages/doc.page\";\nimport MessagesPage from \"./pages/messages.page\";\n\n//components\nimport Navbar from \"./components/Navbar\";\n\n//hooks\nimport useAuth from \"./hooks/useAuth\";\n\n//contexts\nimport AuthContext from \"./context/auth.context\";\n\nfunction App() {\n  const { token, user, login, logout } = useAuth();\n  const isAuth = !!token;\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout, isAuth }}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/authorization'>\n            <AuthPage />\n          </Route>\n          <Route path='/messages'>\n            <MessagesPage />\n          </Route>\n          <Route path='/' exact>\n            <DocPage />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}